//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ejdb {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class VerifyResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal VerifyResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ejdb.Ejdb.Utils.VerifyResources", typeof(VerifyResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A count value was passed to a method that did not accept it as a valid argument, because the count exceeds the length of the associated array..
        /// </summary>
        internal static string CountExceedsArrayLength {
            get {
                return ResourceManager.GetString("CountExceedsArrayLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A count value was passed to a method that did not accept it as a valid argument, because the count exceeds the length of the associated byte array..
        /// </summary>
        internal static string CountExceedsBufferLength {
            get {
                return ResourceManager.GetString("CountExceedsBufferLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A date/time value was passed to a method that did not accept it as a valid argument, because the value is expected to be in local time..
        /// </summary>
        internal static string DateTimeMustBeInLocalTime {
            get {
                return ResourceManager.GetString("DateTimeMustBeInLocalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A date/time value was passed to a method that did not accept it as a valid argument, because the value is expected to be in coordinated universal time (UTC)..
        /// </summary>
        internal static string DateTimeMustBeInUniversalTime {
            get {
                return ResourceManager.GetString("DateTimeMustBeInUniversalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An empty string was passed to a method that did not accept it as a valid argument..
        /// </summary>
        internal static string EmptyStringArgument {
            get {
                return ResourceManager.GetString("EmptyStringArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument..
        /// </summary>
        internal static string InvalidArgument {
            get {
                return ResourceManager.GetString("InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null reference was passed to a method that did not accept it as a valid argument..
        /// </summary>
        internal static string NullArgument {
            get {
                return ResourceManager.GetString("NullArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset and count values were passed to a method that did not accept it as valid arguments, because the sum of offset and count exceeds the length of the associated array..
        /// </summary>
        internal static string OffsetAndCountExceedArrayLength {
            get {
                return ResourceManager.GetString("OffsetAndCountExceedArrayLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset and count values were passed to a method that did not accept it as valid arguments, because the sum of offset and count exceeds the length of the associated byte array..
        /// </summary>
        internal static string OffsetAndCountExceedBufferLength {
            get {
                return ResourceManager.GetString("OffsetAndCountExceedBufferLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An offset value was passed to a method that did not accept it as a valid argument, because the offset exceeds the length of the associated array..
        /// </summary>
        internal static string OffsetExceedsArrayLength {
            get {
                return ResourceManager.GetString("OffsetExceedsArrayLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An offset value was passed to a method that did not accept it as a valid argument, because the offset exceeds the length of the associated byte array..
        /// </summary>
        internal static string OffsetExceedsBufferLength {
            get {
                return ResourceManager.GetString("OffsetExceedsBufferLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value representing a type is not assignable to the specified target type {0}..
        /// </summary>
        internal static string TypeMustBeAssignableTo {
            get {
                return ResourceManager.GetString("TypeMustBeAssignableTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value representing a type must be a sub-class of type {0}..
        /// </summary>
        internal static string TypeMustBeSubclassOf {
            get {
                return ResourceManager.GetString("TypeMustBeSubclassOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value must be at least (equal to or greater than) the minimum value of {0}..
        /// </summary>
        internal static string ValueMustBeAtLeast {
            get {
                return ResourceManager.GetString("ValueMustBeAtLeast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value must be at most (equal to or less than) the maximum value of {0}..
        /// </summary>
        internal static string ValueMustBeAtMost {
            get {
                return ResourceManager.GetString("ValueMustBeAtMost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value must be greater than the minimum value of {0}..
        /// </summary>
        internal static string ValueMustBeGreaterThan {
            get {
                return ResourceManager.GetString("ValueMustBeGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value must be equal to or greater than the minimum value of {0} and equal to or less than the maximum value of {1}..
        /// </summary>
        internal static string ValueMustBeInRange {
            get {
                return ResourceManager.GetString("ValueMustBeInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value must be less than the maximum value of {0}..
        /// </summary>
        internal static string ValueMustBeLessThan {
            get {
                return ResourceManager.GetString("ValueMustBeLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value was passed to a method that did not accept it as a valid argument, because the value must be positive (equal to or greater than zero)..
        /// </summary>
        internal static string ValueMustBePositive {
            get {
                return ResourceManager.GetString("ValueMustBePositive", resourceCulture);
            }
        }
    }
}
